{
  "id": "2.12.1-consume",
  "docNumber": "2.12.1",
  "displayWeight": "100",
  "name": "Consume",
  "description": "This operation consumes a user's ticket connected to a specific purchase. It first checks if a user has a valid ticket with unlimited usage, if not it checks for valid ticket with limited usage. If there are available tickets it consumes one of them and add usage meta data to the TicketUsage. If there are several matches for tickets the ticket with the earliest expire date is consumed.y\n\nAcceptable values for purchase:\nGas: { \"serviceId\" : \"S-hf0nkZQQcl-\", \"premiumResourceType\" : \"GasProduct\" }\nPizza: { \"serviceId\" : \"S-jf0nkZQQcl-\", \"premiumResourceType\" : \"PizzaProduct\" }\nParking: { \"serviceId\" : \"S-if0nkZQQcl-\", \"premiumResourceType\" : \"ParkingProduct\" }\nToll: { \"serviceId\" : \"S-kf0nkZQQcl-\", \"premiumResourceType\" : \"TollProduct\" }\nOil Change: { \"serviceId\" : \"S-mf0nkZQQcl-\", \"premiumResourceType\" : \"OilChangeProduct\" }\nCoffee: { \"serviceId\" : \"S-lf0nkZQQcl-\", \"premiumResourceType\" : \"CoffeeProduct\" }",
  "categories": ["know-driver"],
  "subCategories": [],
  "resourceTable": {
    "Route": "/content/v1/commerce/consume/{userURI}",
    "HTTP Verb": ["POST"],
    "Authentication": "Basic Authentication"
  },
  "parameters": {
    "route": {
      "userURI": "Represents the user identity in the following format: 'id:<userid>' or 'msisdn:<number>'."
    },
    "requestBody": [
      {
        "key": "appId",
        "type": "String",
        "required": true,
        "defaultVal": "MyApp",
        "description": "Optional: application making this call."
      },
      {
        "key": "parameters",
        "type": "JSON",
        "required": true,
        "defaultVal": "{ \"serviceId\" : \"S-hf0nkZQQcl-\", \"premiumResourceType\" : \"GasProduct\" }",
        "description": "Parameters format depends on the application domain and operation."
      },
      {
        "key": "client",
        "type": "JSON",
        "required": false,
        "description": "Client capabilities (deviceId)."
      }
    ],
    "responseBody": [
      {
        "key": "billingId",
        "type": "String",
        "required": false,
        "description": "The ID given by the billing system when a purchase is done."
      },
      {
        "key": "purchaseId",
        "type": "String",
        "required": false,
        "description": "The given ID of a purchase when it is done."
      },
      {
        "key": "purchaseIsDone",
        "type": "Boolean",
        "required": true,
        "description": "Specifies whether the purchase is done. True if a purchase is done, else False."
      },
      {
        "key": "recurrentPurchaseId",
        "type": "String",
        "required": false,
        "description": "The ID for the recurrent purchase given that one has been purchased."
      },
      {
        "key": "statusCode",
        "type": "Integer",
        "required": true,
        "description": "Status code for the operation. 0 for success (see error code table otherwise)."
      },
      {
        "key": "unlimitedTicketUsed",
        "type": "Boolean",
        "required": true,
        "description": "Specifies whether the ticket is unlimited to be used. True if the ticket is unlimited to be used, else False."
      },
      {
        "key": "ticketConsumed",
        "type": "Boolean",
        "required": true,
        "description": "Specifies whether the ticket is consumed. True if the ticket is consumed, else False."
      },
      {
        "key": "transactionId",
        "type": "String",
        "required": false,
        "description": "The ID of the transaction."
      },
      {
        "key": "billingErrorInformation",
        "type": "JSON",
        "required": false,
        "description": "Billing error information"
      }
    ]
  },
  "bodyParameterFormats": {
    "request": {
      "Parameters": [
        {
          "key": "serviceId",
          "type": "String",
          "required": true,
          "description": "The requester's service id."
        },
        {
          "key": "premiumResourceType",
          "type": "String",
          "required": true,
          "description": "The premium resource type."
        },
        {
          "key": "ruleProperties",
          "type": "JSON",
          "required": false,
          "description": "Properties used for product and price selection (list of meta)."
        },
        {
          "key": "usageMetas",
          "type": "JSON",
          "required": false,
          "description": "Meta data stored together with the used ticket (list of meta)."
        }
      ]
    },
    "response": {
      "billingErrorInformation": [
        {
          "key": "errorCode",
          "type": "String",
          "required": true,
          "description": "Error code that indicates the billing error."
        },
        {
          "key": "errorMessage",
          "type": "String",
          "required": false,
          "description": "The accompanying message description for the error code."
        },
        {
          "key": "variables",
          "type": "String",
          "required": false,
          "description": "Additional information returned from external charging system."
        }
      ]
    }
  },
  "errors": [
    400,
    401,
    403,
    404,
    500
  ],
  "examples": [
    {
      "type": "request",
      "verb": "POST",
      "route": "/content/v1/commerce/consume/msisdn:5143457900",
      "body": {
        "appId": "appStore",
        "parameters": {
          "serviceId": "S-123455",
          "premiumResourceType": "HTML5"
        },
        "Client": {
          "deviceId": "IMX"
        }
      }
    },
    {
      "type": "response",
      "body": {
        "billingId": "~billingId~",
        "purchaseId": "~purchaseId~",
        "purchaseIsdone": true,
        "recurrentPurchaseId": "~recurrentPurchaseId~",
        "statusCode": 0,
        "unlimitedTicketUsed": true,
        "ticketConsumed": true,
        "transactionId": "~transactionId~",
        "billingErrorInformation": null
      }
    }
  ],
  "codeExamples": {
    "android": "/app/src/com/idean/atthack/network/RequestHelper.java",
    "ios": "/ASDP%20Sampler/Network/ASDPRequestManager.m",
    "web": "/dist/data/web-examples.js"
  }
}
